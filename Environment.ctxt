#BlueJ class context
comment0.params=
comment0.target=Environment()
comment0.text=\r\n\ Create\ an\ environment\ with\ the\ default\ size.\r\n
comment1.params=numRows\ numCols
comment1.target=Environment(int,\ int)
comment1.text=\r\n\ Create\ an\ environment\ with\ the\ given\ size.\r\n\ @param\ numRows\ The\ number\ of\ rows.\r\n\ @param\ numCols\ The\ number\ of\ cols;\r\n
comment2.params=
comment2.target=void\ step()
comment2.text=\r\n\ Run\ the\ automaton\ for\ one\ step.\r\n
comment3.params=
comment3.target=void\ reset()
comment3.text=\r\n\ Reset\ the\ state\ of\ the\ automaton\ to\ all\ DEAD.\r\n
comment4.params=
comment4.target=void\ randomize()
comment4.text=\r\n\ Generate\ a\ random\ setup.\r\n
comment5.params=row\ col\ state
comment5.target=void\ setCellState(int,\ int,\ int)
comment5.text=\r\n\ Set\ the\ state\ of\ one\ cell.\r\n\ @param\ row\ The\ cell's\ row.\r\n\ @param\ col\ The\ cell's\ col.\r\n\ @param\ state\ The\ cell's\ state.\r\n
comment6.params=
comment6.target=Cell[][]\ getCells()
comment6.text=\r\n\ Return\ the\ grid\ of\ cells.\r\n\ @return\ The\ grid\ of\ cells.\r\n
comment7.params=numRows\ numCols
comment7.target=void\ setup(int,\ int)
comment7.text=\r\n\ Setup\ a\ new\ environment\ of\ the\ given\ size.\r\n\ @param\ numRows\ The\ number\ of\ rows.\r\n\ @param\ numCols\ The\ number\ of\ cols;\r\n
comment8.params=
comment8.target=void\ setupNeighbors()
comment8.text=\r\n\ Give\ to\ a\ cell\ a\ list\ of\ its\ neighbors.\r\n
numComments=9
